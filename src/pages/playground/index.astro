---
import BaseLayout from '../../layouts/BaseLayout.astro'
import ArticleHeader from '../../components/Article/ArticleHeader.astro'
import {a11yOnlyClass} from '../../components/utils/AccessibleOnly.tsx'

const pages = Astro.fetchContent('./*/index.md').map((page) => ({
	...page,
	url: page.url.replace(/\/index$/g, '')
}))

const title = 'Playground'
const subtitle = 'Just some UI components I\'ve made.'
---

<BaseLayout title={title}>
	<ArticleHeader title={title} subtitle={subtitle} />
	<ul>
		{pages.map((page) => {
			const tech = page.tech.slice(0, 2)
			const technologies = `This project was made using ${tech.join(' and ')}.`

			return (
				<li>
					<a href={page.url}>
						<div class="card-content">
							<span class="emoji" aria-hidden="true">
								{page.emoji ?? '‚ùì'}
							</span>
							<div class="card-text">
								<h2>
									{page.title}
									<span class={a11yOnlyClass}>.</span>
								</h2>
								{page.subtitle && (
									<p>
										{page.subtitle}
									</p>
								)}
							</div>
							<div aria-label={technologies} title={technologies}>
								{tech.map((tech: string) => (
									<img class="tech-badge" src={`/assets/icons/${tech.toLowerCase()}.svg`} />
								))}
							</div>
						</div>
					</a>
				</li>
			)
		})}
	</ul>
</BaseLayout>

<style lang="scss">
	ul {
		list-style: none;
		padding: 0;

		display: flex;
		flex-flow: column nowrap;
	}

	h2 {
		font-size: 1.5em;
		font-weight: 600;
		margin: 0;
	}

	.emoji {
		font-size: 34pt;
		margin-right: 18pt;
	}

	.card-text {
		flex: 1 0;
	}

	.tech-badge {
		width: 36px;
		height: 36px;

		filter: saturate(0%) brightness(0%);

		&:not(:last-child) {
			margin-right: 8pt;
		}
	}

	a {
		display: flex;
		flex-flow: column nowrap;
		padding: 20pt 18pt;
		margin: 0 -18pt;
		padding-top: 0;
		border-radius: 6px;

		transition: box-shadow .2s ease, border-bottom-color .2s ease;

		> .card-content {
			display: flex;
			flex-flow: row nowrap;
			align-items: center;

			padding-top: 20pt;

			p {
				margin: 2pt 0 0 0;
			}

			border-top: 1px solid rgba(black, .15);
		}

		&:hover {
			text-decoration: none;
			background: white;
			box-shadow: 0pt 4pt 16pt rgba(black, .3);

			> .card-content {
				border-top-color: transparent;
			}

			h2 {
				text-decoration: underline;
				text-decoration-color: var(--accent-color);
			}
		}

		&:focus {
			outline: 3px solid var(--accent-color);
		}
	}

	li:first-of-type {
		a > .card-content {
			border-top-color: transparent;
		}
	}
</style>
